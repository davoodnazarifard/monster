{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","students","fetch","then","response","json","this","searchedMonsters","filter","student","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAIaA,G,MAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,gCAA4BF,EAAMG,QAAQC,GAA1C,8BAA2EC,IAAI,YACvF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,aCLjBC,EAAW,SAACR,GACrB,OAAO,qBAAKC,UAAU,YAAf,SACFD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OAAI,cAAC,EAAD,CAAwBA,QAASA,GAArBA,EAAQC,UCF9CO,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAcC,EAAhB,EAAgBA,aAAhB,OACrB,uBAAOZ,UAAU,SAASa,KAAK,SAASR,KAAK,SAASF,GAAG,SAASQ,YAAaA,EAAaG,SAAUF,MCoC3FG,G,8DAhCZ,aAAc,IAAD,8BACX,gBAYFH,aAAe,SAACI,GACb,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAZrC,EAAKC,MAAQ,CACVC,SAAS,GACTJ,YAAY,IAJJ,E,gEASO,IAAD,OACjBK,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAAF,GAAQ,OAAI,EAAKL,SAAS,CAACK,SAASA,S,+BAQxH,IAAD,EACwBK,KAAKN,MAA7BC,EADA,EACAA,SAASJ,EADT,EACSA,YACVU,EAAmBN,EAASO,QAAO,SAACC,GAAD,OACvCA,EAAQzB,KAAK0B,cAAcC,SAASd,EAAYa,kBAElD,OACE,sBAAK/B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CAAWW,YAAY,iBAAiBC,aAAce,KAAKf,eAC3D,cAAC,EAAD,CAAUJ,SAAUoB,W,GA5BTK,cCIJC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.985f5b0c.chunk.js","sourcesContent":["import Reat from 'react'\r\n\r\nimport '../card/card-styles.css'\r\n\r\nexport const Card = (props) =>{\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img src= {`https://robohash.org/R${props.monster.id}.png?set=set1&size=180x180`}  alt=\"monster\"/>\r\n            <h2>{props.monster.name}</h2>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nimport {Card} from '../card/card.component'\r\n\r\nexport const CardList = (props) => {\r\n    return(<div className=\"card-list\">\r\n        {props.monsters.map(monster => <Card  key={monster.id} monster={monster}/>)}\r\n    </div>)\r\n}","import React from 'react'\r\n\r\nimport '../search-box/search-box.styles.css'\r\n\r\nexport const SearchBox = ({placeholder , handleChange}) =>(\r\n    <input className=\"search\" type=\"search\" name=\"search\" id=\"search\" placeholder={placeholder} onChange={handleChange}/>\r\n)","import React , {Component} from 'react'\n\nimport {CardList} from './components/card-list/card-list.component'\nimport {SearchBox} from './components/search-box/search-box.component'\n/*import logo from './logo.svg';*/\nimport './App.css';\nimport './components/card-list/card-list.styles.css'\n\n class App extends Component {\n   constructor(){\n     super();\n     this.state = {\n        students:[],\n        searchField:''\n     };\n      \n   }\n\n   componentDidMount(){\n     fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(students => this.setState({students:students}))\n   }\n\n   handleChange = (e) => {\n      this.setState({searchField:e.target.value})\n   }\n   \n    \n   render(){\n    const {students,searchField} = this.state;\n    const searchedMonsters = students.filter((student)=>\n      student.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Monster Rolodex</h1>\n        <SearchBox placeholder=\"search monster\" handleChange={this.handleChange}/>\n        <CardList monsters={searchedMonsters}/>\n      </div>\n    );\n   }\n }\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}